@page "/weather"
@inject HttpClient Http
@inject BlazorApp1.Services.IConfigurationService ConfigService
@using BlazorApp1.Models

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else if (errorMessage != null)
{
    <p class="text-danger">Error: @errorMessage</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var apiBaseUrl = await ConfigService.GetApiBaseUrlAsync();
            var weatherUrl = $"{apiBaseUrl.TrimEnd('/')}/WeatherForecast";
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>(weatherUrl);
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load weather data: {ex.Message}";
        }
    }
}
